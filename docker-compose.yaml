version: '3.8'

services:
  app:
    container_name: app
    build: app
    ports:
      - '8080:8080'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      pay:
        condition: service_started
      keycloak:
        condition: service_started
    environment:
      SPRING_R2DBC_URL: r2dbc:postgresql://postgres:5432/intershop
      SPRING_R2DBC_USERNAME: postgres
      SPRING_R2DBC_PASSWORD: ''
      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/intershop
      SPRING_LIQUIBASE_USER: postgres
      SPRING_LIQUIBASE_PASSWORD: ''
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      PAY_SERVICE_BASE_URL: http://pay:8081/api/v1/pay

  pay:
    container_name: pay
    build: pay
    ports:
      - '8081:8081'
    depends_on:
      keycloak:
        condition: service_started

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: intershop
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ''
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7.0-alpine
    command: redis-server --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    environment:
      KC_DB: dev-mem
      KC_LOG_LEVEL: INFO
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT: "false"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
    ports:
      - '8082:8080'  # Чтобы не конфликтовать с app на 8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  redisdata:
